// 内置模块的加载机制
/*
    内置模块是由Node.js官方提供的模块，内置模块的加载优先级最高
        例如require('fs')是内置的fs模块，第三方模块也有fs模块，然而优先加载的是内置模块
*/

// 自定义模块的加载机制
/*
    使用require()加载自定义模块时，必须指定以./或../开头的路径标识符
    如果没有指定./或../，则node会把它当作内置模块或第三方模块进行加载

    同时，如果省略了文件的扩展名，Node.js会按顺序分别尝试加载以下文件：
        1.按照确切的文件名进行加载
        2.补全.js扩展名进行加载
        3.补全.json扩展名进行加载
        4.补全.node扩展名进行加载
        5.加载失败，终端报错
*/

// 第三方模块的加载机制
/*
    如果传递给require()的模块不是以./或../开头，则Node.js会从当前模块的父目录开始，
    开始尝试从/node_modules文件夹中加载第三方模块
*/

// 目录作为模块
/*
    当把目录作为模块传给require()进行加载的时候，有三种加载方式
        1.会在被加载的目录下查找package.json文件中的main属性，作为require()加载的入口
        2.如果目录里没有package.json文件，或者main入口不存在或无法解析，则Node.js将会加载index.js文件
        3.如果以上两部都失败，就会报错
*/